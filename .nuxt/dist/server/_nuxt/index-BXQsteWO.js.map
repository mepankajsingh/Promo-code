{"version":3,"file":"index-BXQsteWO.js","sources":["../../../../components/PromoCodeManager.vue","../../../../components/RobotsEditor.vue","../../../../pages/admin/index.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-6\">\n    <!-- Coupon Statistics -->\n    <div class=\"bg-white border border-gray-200 rounded-lg p-6\">\n      <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Coupon Statistics</h3>\n      \n      <!-- Region Tabs -->\n      <div class=\"border-b border-gray-200 mb-4\">\n        <nav class=\"flex space-x-4\" aria-label=\"Region tabs\">\n          <button\n            v-for=\"region in regions\"\n            :key=\"region.value\"\n            @click=\"selectedRegion = region.value\"\n            :class=\"[\n              'px-3 py-2 text-sm font-medium border-b-2',\n              selectedRegion === region.value\n                ? 'border-blue-500 text-blue-600'\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            ]\"\n          >\n            {{ region.label }}\n          </button>\n        </nav>\n      </div>\n\n      <!-- Statistics Grid -->\n      <div class=\"grid grid-cols-2 gap-4\">\n        <!-- Starter Statistics -->\n        <div class=\"bg-gray-50 p-4 rounded-lg\">\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Business Starter</h4>\n          <div class=\"space-y-2\">\n            <div class=\"flex justify-between items-center\">\n              <span class=\"text-sm text-gray-600\">Available:</span>\n              <span class=\"text-sm font-medium text-green-600\">\n                {{ getAvailableCount('starter', selectedRegion) }}\n              </span>\n            </div>\n            <div class=\"flex justify-between items-center\">\n              <span class=\"text-sm text-gray-600\">Used:</span>\n              <span class=\"text-sm font-medium text-blue-600\">\n                {{ getUsedCount('starter', selectedRegion) }}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Standard Statistics -->\n        <div class=\"bg-gray-50 p-4 rounded-lg\">\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Business Standard</h4>\n          <div class=\"space-y-2\">\n            <div class=\"flex justify-between items-center\">\n              <span class=\"text-sm text-gray-600\">Available:</span>\n              <span class=\"text-sm font-medium text-green-600\">\n                {{ getAvailableCount('standard', selectedRegion) }}\n              </span>\n            </div>\n            <div class=\"flex justify-between items-center\">\n              <span class=\"text-sm text-gray-600\">Used:</span>\n              <span class=\"text-sm font-medium text-blue-600\">\n                {{ getUsedCount('standard', selectedRegion) }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"canManageCodes\" class=\"bg-white border border-gray-200 rounded-lg\">\n      <!-- Add New Promo Code -->\n      <div class=\"p-6 border-b border-gray-200\">\n        <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Add New Promo Code</h3>\n        <form @submit.prevent=\"addPromoCode\" class=\"space-y-4\">\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700 mb-1\">Code Type</label>\n              <select \n                v-model=\"newCode.type\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                required\n              >\n                <option value=\"starter\">Business Starter</option>\n                <option value=\"standard\">Business Standard</option>\n              </select>\n            </div>\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700 mb-1\">Region</label>\n              <select \n                v-model=\"newCode.region\"\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n                required\n              >\n                <option value=\"americas\">Americas</option>\n                <option value=\"asia_pacific\">Asia Pacific</option>\n                <option value=\"emea\">EMEA</option>\n              </select>\n            </div>\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-1\">Promo Code</label>\n            <input \n              v-model=\"newCode.code\"\n              type=\"text\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-sm\"\n              required\n              pattern=\"[A-Z0-9]{15}\"\n              title=\"Code must be 15 characters long and contain only uppercase letters and numbers\"\n            >\n          </div>\n          <div class=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              class=\"bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-700\"\n              :disabled=\"loading\"\n            >\n              {{ loading ? 'Adding...' : 'Add Promo Code' }}\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <!-- Available Codes List -->\n      <div class=\"p-6 border-b border-gray-200\">\n        <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Available Codes</h3>\n        <div class=\"overflow-x-auto\">\n          <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Code</th>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Type</th>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Region</th>\n                <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Created At</th>\n                <th class=\"px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase\">Actions</th>\n              </tr>\n            </thead>\n            <tbody class=\"divide-y divide-gray-200\">\n              <tr v-for=\"code in availableCodes\" :key=\"code.id\">\n                <td class=\"px-4 py-3 text-sm font-medium text-gray-900\">{{ code.code }}</td>\n                <td class=\"px-4 py-3 text-sm text-gray-500\">{{ code.type }}</td>\n                <td class=\"px-4 py-3 text-sm text-gray-500\">{{ code.region }}</td>\n                <td class=\"px-4 py-3 text-sm text-gray-500\">{{ formatDate(code.created_at) }}</td>\n                <td class=\"px-4 py-3 text-sm text-right\">\n                  <button\n                    @click=\"confirmDelete(code)\"\n                    class=\"text-red-600 hover:text-red-800\"\n                    title=\"Delete code\"\n                  >\n                    <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n\n    <!-- Claimed Codes List -->\n    <div class=\"bg-white border border-gray-200 rounded-lg p-6\">\n      <h3 class=\"text-lg font-semibold text-gray-900 mb-4\">Claimed Codes</h3>\n      <div class=\"overflow-x-auto\">\n        <table class=\"min-w-full divide-y divide-gray-200\">\n          <thead>\n            <tr>\n              <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Code</th>\n              <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Type</th>\n              <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Region</th>\n              <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Claimed By</th>\n              <th class=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Claimed At</th>\n            </tr>\n          </thead>\n          <tbody class=\"divide-y divide-gray-200\">\n            <tr v-for=\"claim in claimedCodes\" :key=\"claim.id\">\n              <td class=\"px-4 py-3 text-sm font-medium text-gray-900\">{{ claim.promo_codes.code }}</td>\n              <td class=\"px-4 py-3 text-sm text-gray-500\">{{ claim.type }}</td>\n              <td class=\"px-4 py-3 text-sm text-gray-500\">{{ claim.region }}</td>\n              <td class=\"px-4 py-3 text-sm text-gray-500\">{{ claim.ip_address }}</td>\n              <td class=\"px-4 py-3 text-sm text-gray-500\">{{ formatDate(claim.created_at) }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <!-- Delete Confirmation Modal -->\n    <div v-if=\"showDeleteModal\" class=\"fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50\">\n      <div class=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Confirm Delete</h3>\n        <p class=\"text-sm text-gray-600 mb-4\">\n          Are you sure you want to delete the promo code <span class=\"font-medium\">{{ selectedCode?.code }}</span>?\n          This action cannot be undone.\n        </p>\n        <div class=\"flex justify-end space-x-3\">\n          <button\n            @click=\"showDeleteModal = false\"\n            class=\"px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500\"\n          >\n            Cancel\n          </button>\n          <button\n            @click=\"deleteCode\"\n            class=\"px-4 py-2 text-sm font-medium text-white bg-red-600 hover:bg-red-700 rounded-md\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst supabase = useSupabaseClient()\nconst loading = ref(false)\nconst claimedCodes = ref([])\nconst availableCodes = ref([])\nconst selectedRegion = ref('americas')\nconst showDeleteModal = ref(false)\nconst selectedCode = ref(null)\n\nconst props = defineProps({\n  userId: {\n    type: String,\n    required: true\n  }\n})\n\nconst canManageCodes = computed(() => {\n  return props.userId === 'd38b6b3e-189c-47ce-b6a6-48187d160ebd'\n})\n\nconst regions = [\n  { value: 'americas', label: 'Americas' },\n  { value: 'asia_pacific', label: 'Asia Pacific' },\n  { value: 'emea', label: 'EMEA' }\n]\n\nconst newCode = ref({\n  code: '',\n  type: 'starter',\n  region: 'americas'\n})\n\n// Format date\nfunction formatDate(date) {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  })\n}\n\n// Get available count for type and region\nfunction getAvailableCount(type, region) {\n  return availableCodes.value.filter(\n    code => code.type === type && code.region === region\n  ).length\n}\n\n// Get used count for type and region\nfunction getUsedCount(type, region) {\n  return claimedCodes.value.filter(\n    claim => claim.type === type && claim.region === region\n  ).length\n}\n\n// Confirm delete\nfunction confirmDelete(code) {\n  selectedCode.value = code\n  showDeleteModal.value = true\n}\n\n// Add new promo code\nasync function addPromoCode() {\n  if (!canManageCodes) return\n  \n  loading.value = true\n  try {\n    const { error } = await supabase\n      .from('promo_codes')\n      .insert([{\n        code: newCode.value.code,\n        type: newCode.value.type,\n        region: newCode.value.region,\n        is_claimed: false\n      }])\n    \n    if (error) throw error\n\n    // Reset form\n    newCode.value = {\n      code: '',\n      type: 'starter',\n      region: 'americas'\n    }\n\n    // Refresh data\n    await Promise.all([\n      fetchClaimedCodes(),\n      fetchAvailableCodes()\n    ])\n\n    // Emit event to refresh stats\n    emit('code-added')\n  } catch (error) {\n    console.error('Error adding promo code:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// Delete promo code\nasync function deleteCode() {\n  if (!canManageCodes || !selectedCode.value) return\n  \n  try {\n    const { error } = await supabase\n      .from('promo_codes')\n      .delete()\n      .eq('id', selectedCode.value.id)\n\n    if (error) throw error\n\n    // Close modal\n    showDeleteModal.value = false\n    selectedCode.value = null\n\n    // Refresh data\n    await Promise.all([\n      fetchClaimedCodes(),\n      fetchAvailableCodes()\n    ])\n\n    // Emit event to refresh stats\n    emit('code-deleted')\n  } catch (error) {\n    console.error('Error deleting promo code:', error)\n  }\n}\n\n// Fetch claimed codes\nasync function fetchClaimedCodes() {\n  try {\n    const { data, error } = await supabase\n      .from('user_claims')\n      .select(`\n        id,\n        type,\n        region,\n        ip_address,\n        created_at,\n        promo_codes (\n          code\n        )\n      `)\n      .order('created_at', { ascending: false })\n\n    if (error) throw error\n    claimedCodes.value = data\n  } catch (error) {\n    console.error('Error fetching claimed codes:', error)\n  }\n}\n\n// Fetch available codes\nasync function fetchAvailableCodes() {\n  try {\n    const { data, error } = await supabase\n      .from('promo_codes')\n      .select('*')\n      .eq('is_claimed', false)\n      .order('created_at', { ascending: false })\n\n    if (error) throw error\n    availableCodes.value = data\n  } catch (error) {\n    console.error('Error fetching available codes:', error)\n  }\n}\n\n// Define emits\nconst emit = defineEmits(['code-added', 'code-deleted'])\n\n// Watch region changes to refresh data\nwatch(selectedRegion, () => {\n  Promise.all([\n    fetchClaimedCodes(),\n    fetchAvailableCodes()\n  ])\n})\n\n// Initial fetch\nonMounted(() => {\n  Promise.all([\n    fetchClaimedCodes(),\n    fetchAvailableCodes()\n  ])\n})\n</script>\n","<template>\n  <div class=\"bg-white border border-gray-200 rounded-lg p-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <h3 class=\"text-lg font-semibold text-gray-900\">Edit robots.txt</h3>\n      <div class=\"flex items-center space-x-2\">\n        <button\n          @click=\"resetToDefault\"\n          class=\"text-gray-600 hover:text-gray-800 text-sm\"\n          :disabled=\"loading\"\n        >\n          Reset to Default\n        </button>\n      </div>\n    </div>\n    \n    <div class=\"mb-4\">\n      <textarea\n        v-model=\"robotsContent\"\n        rows=\"10\"\n        class=\"w-full font-mono text-sm p-4 border border-gray-300 rounded-lg\"\n        :disabled=\"loading\"\n        placeholder=\"User-agent: *&#10;Disallow: /admin&#10;Disallow: /login&#10;&#10;Sitemap: https://your-site.com/sitemap.xml\"\n      ></textarea>\n      <p class=\"mt-2 text-sm text-gray-500\">\n        Make sure to include User-agent and Disallow directives, and keep the admin and login pages blocked from search engines.\n      </p>\n    </div>\n\n    <div class=\"flex justify-end space-x-3\">\n      <button\n        @click=\"saveRobots\"\n        class=\"bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-700 disabled:opacity-50\"\n        :disabled=\"loading || !isValid\"\n      >\n        {{ loading ? 'Saving...' : 'Save Changes' }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst robotsContent = ref('')\nconst loading = ref(false)\n\nconst emit = defineEmits(['saved'])\n\nconst defaultContent = `User-agent: *\nDisallow: /admin\nDisallow: /login\n\nSitemap: https://workspace-promos.netlify.app/sitemap.xml`\n\nconst isValid = computed(() => {\n  const content = robotsContent.value\n  if (!content) return false\n\n  const lines = content.split('\\n')\n  const hasUserAgent = lines.some(line => line.trim().startsWith('User-agent:'))\n  const hasDisallow = lines.some(line => line.trim().startsWith('Disallow:'))\n  const hasAdminDisallow = lines.some(line => line.trim() === 'Disallow: /admin')\n  const hasLoginDisallow = lines.some(line => line.trim() === 'Disallow: /login')\n\n  return hasUserAgent && hasDisallow && hasAdminDisallow && hasLoginDisallow\n})\n\n// Load current robots.txt content\nasync function loadRobotsContent() {\n  try {\n    const response = await fetch('/robots.txt')\n    if (!response.ok) throw new Error('Failed to load robots.txt')\n    robotsContent.value = await response.text()\n  } catch (error) {\n    console.error('Error loading robots.txt:', error)\n    emit('saved', 'Error loading robots.txt', 'error')\n  }\n}\n\n// Reset to default content\nfunction resetToDefault() {\n  robotsContent.value = defaultContent\n}\n\n// Save robots.txt content\nasync function saveRobots() {\n  if (!isValid.value) {\n    emit('saved', 'Invalid robots.txt content. Must include User-agent and Disallow directives for admin and login pages.', 'error')\n    return\n  }\n\n  loading.value = true\n  try {\n    const response = await fetch('/api/robots', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ content: robotsContent.value }),\n    })\n\n    if (!response.ok) {\n      const error = await response.json()\n      throw new Error(error.message || 'Failed to save robots.txt')\n    }\n\n    emit('saved', 'robots.txt updated successfully')\n  } catch (error) {\n    console.error('Error saving robots.txt:', error)\n    emit('saved', error.message || 'Error saving robots.txt', 'error')\n  } finally {\n    loading.value = false\n  }\n}\n\n// Load content on mount\nonMounted(() => {\n  loadRobotsContent()\n})\n</script>\n","<template>\n  <div class=\"min-h-screen bg-white\">\n    <!-- Admin Header -->\n    <nav class=\"bg-white border-b border-gray-200\">\n      <div class=\"max-w-4xl mx-auto px-4\">\n        <div class=\"flex justify-between h-14\">\n          <div class=\"flex\">\n            <NuxtLink to=\"/\" class=\"flex items-center\">\n              <svg class=\"h-6 w-6 text-blue-400\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n              </svg>\n            </NuxtLink>\n          </div>\n          <div class=\"flex items-center space-x-4\">\n            <span v-if=\"user\" class=\"text-sm text-gray-700\">{{ user.email }}</span>\n            <button\n              v-if=\"user\"\n              @click=\"handleSignOut\"\n              class=\"inline-flex items-center px-3 py-1 text-sm text-red-600 hover:text-red-700\"\n            >\n              <svg class=\"h-4 w-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n              </svg>\n              Sign Out\n            </button>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n    <!-- Main Content -->\n    <div class=\"max-w-4xl mx-auto px-4 py-12\">\n      <div class=\"text-center mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Admin Dashboard</h1>\n        <p class=\"text-gray-600\">Manage promo codes and monitor usage</p>\n      </div>\n\n      <Notification\n        v-if=\"notification.show\"\n        :message=\"notification.message\"\n        :type=\"notification.type\"\n      />\n\n      <!-- Stats Overview -->\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        <div class=\"bg-white border border-gray-200 p-6 rounded-lg\">\n          <div class=\"flex items-center justify-between mb-1\">\n            <h3 class=\"text-sm font-medium text-gray-900\">Total Users</h3>\n            <svg class=\"h-5 w-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n            </svg>\n          </div>\n          <p class=\"text-2xl font-bold text-gray-900\">{{ stats.totalUsers }}</p>\n        </div>\n        <div class=\"bg-white border border-gray-200 p-6 rounded-lg\">\n          <div class=\"flex items-center justify-between mb-1\">\n            <h3 class=\"text-sm font-medium text-gray-900\">Active Codes</h3>\n            <svg class=\"h-5 w-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\n            </svg>\n          </div>\n          <p class=\"text-2xl font-bold text-gray-900\">{{ stats.activePromoCodes }}</p>\n        </div>\n        <div class=\"bg-white border border-gray-200 p-6 rounded-lg\">\n          <div class=\"flex items-center justify-between mb-1\">\n            <h3 class=\"text-sm font-medium text-gray-900\">Claimed Codes</h3>\n            <svg class=\"h-5 w-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z\" />\n            </svg>\n          </div>\n          <p class=\"text-2xl font-bold text-gray-900\">{{ stats.claimedCodes }}</p>\n        </div>\n      </div>\n\n      <!-- Promo Code Manager -->\n      <PromoCodeManager \n        @code-added=\"handleCodeAdded\" \n        @code-deleted=\"handleCodeDeleted\"\n        :user-id=\"user?.id\"\n      />\n\n      <!-- Robots.txt Editor -->\n      <div class=\"mt-8\" v-if=\"canManageRobots\">\n        <RobotsEditor @saved=\"handleRobotsSaved\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst supabase = useSupabaseClient()\nconst user = useSupabaseUser()\nconst router = useRouter()\nconst isLoading = ref(true)\n\n// Add loading state\nconst stats = ref({\n  totalUsers: 0,\n  activePromoCodes: 0,\n  claimedCodes: 0\n})\n\nconst notification = ref({\n  show: false,\n  message: '',\n  type: 'success'\n})\n\n// Check if user can manage robots.txt\nconst canManageRobots = computed(() => {\n  return user.value?.id === 'd38b6b3e-189c-47ce-b6a6-48187d160ebd'\n})\n\n// Check admin access before showing content\nasync function checkAdminAccess() {\n  if (!user.value) {\n    router.push('/login')\n    return false\n  }\n\n  try {\n    const { data: adminUser } = await supabase\n      .from('admin_users')\n      .select()\n      .eq('user_id', user.value.id)\n      .single()\n\n    if (!adminUser) {\n      router.push('/login')\n      return false\n    }\n\n    return true\n  } catch (error) {\n    console.error('Error checking admin status:', error)\n    router.push('/login')\n    return false\n  }\n}\n\nfunction showNotification(message, type = 'success') {\n  notification.value = {\n    show: true,\n    message,\n    type\n  }\n  setTimeout(() => {\n    notification.value.show = false\n  }, 5000)\n}\n\n// Handle code added\nfunction handleCodeAdded() {\n  fetchDashboardData()\n  showNotification('Promo code added successfully')\n}\n\n// Handle code deleted\nfunction handleCodeDeleted() {\n  fetchDashboardData()\n  showNotification('Promo code deleted successfully')\n}\n\n// Handle robots.txt saved\nfunction handleRobotsSaved(message, type = 'success') {\n  showNotification(message, type)\n}\n\n// Handle Sign Out\nasync function handleSignOut() {\n  try {\n    const { error } = await supabase.auth.signOut()\n    if (error) throw error\n    router.push('/login')\n  } catch (error) {\n    console.error('Error signing out:', error)\n    showNotification('Error signing out. Please try again.', 'error')\n  }\n}\n\nasync function fetchDashboardData() {\n  if (!user.value) return\n\n  try {\n    const hasAccess = await checkAdminAccess()\n    if (!hasAccess) return\n\n    // Update last login\n    await supabase\n      .from('admin_users')\n      .update({ last_login: new Date().toISOString() })\n      .eq('user_id', user.value.id)\n\n    // Fetch stats\n    const [\n      { count: totalUsers },\n      { count: activePromoCodes },\n      { count: claimedCodes }\n    ] = await Promise.all([\n      supabase.from('business_emails').select('id', { count: 'exact' }),\n      supabase.from('promo_codes').select('id', { count: 'exact' }).eq('is_claimed', false),\n      supabase.from('user_claims').select('id', { count: 'exact' })\n    ])\n\n    stats.value = {\n      totalUsers: totalUsers || 0,\n      activePromoCodes: activePromoCodes || 0,\n      claimedCodes: claimedCodes || 0\n    }\n  } catch (error) {\n    console.error('Error fetching dashboard data:', error)\n    showNotification('Error fetching dashboard data', 'error')\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Watch for user changes\nwatch(user, (newUser) => {\n  if (newUser) {\n    fetchDashboardData()\n  } else {\n    router.push('/login')\n  }\n})\n\n// Initial fetch\nonMounted(async () => {\n  const hasAccess = await checkAdminAccess()\n  if (hasAccess) {\n    await fetchDashboardData()\n  }\n})\n\nuseHead({\n  title: 'Admin Dashboard - Google Workspace Promo Codes',\n  meta: [\n    {\n      name: 'description',\n      content: 'Admin dashboard for managing Google Workspace promo codes and monitoring usage.'\n    }\n  ]\n})\n</script>\n"],"names":[],"mappings":"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"}